COMSC-110
Teacher

1. Objective:  calculate change due in a transaction using these U.S. bills – no cents: $1, $2, $5, $10, $20, $50, $100, $500, $1000, $5000, $10000, and $100000 bills.

2. Requirements:
--INPUT: 
amountOwed = set amount by author
cashPaid = set amount by author
amountOwed is always less than cashPaid.
cashPaid cannot be zero or negative.

--PROCESSING: 
The paid out bills should include the fewest number of bills. For example, do not include two $10 bills when you can include one $20 bill instead. 
totalChangeDue = cashPaid - amountOwed
changeDue = totalChangeDue
thousand100 = changeDue / 100000
changeDue = remainder from changeDue / 100000
thousand10 = changeDue /10000
changeDue = remainder from changeDue / 10000
thousand5 = changeDue / 5000
changeDue = remainder from changeDue / 5000
thousand = changeDue / 1000
changeDue = remainder from changeDue / 1000
hundred5 = changeDue / 500
changeDue = remainder from changeDue / 500
hundred = changeDue /100
changeDue = remainder from changeDue / 100
fifty = changeDue / 50
changeDue = remainder from changeDue / 50
twenty = changeDue / 20
changeDue = remainder from changeDue / 20
ten = changeDue / 10
changeDue = remainder from changeDue / 10
five = changeDue / 5
changeDue = remainder from changeDue / 5
one = changeDue



--OUTPUT:
objective
author 
user instructions: "set the amount owed and the cash paid amounts to calculate change due in all specified U.S. bills."
label1: "amount owed: " 
amountOwed
label2: "amount cash paid: "
cashPaid
label3: "Change due: "
totalChangeDue
label4: "Change paid out in: "
label5: "this many $100,000 bills: "
thousand100
label6: "this many $10,000 bills: "
thousand10
label7: "this many $5,000 bills: "
thousand5
label8: "this many $1,000 bills: "
thousand
label9: "this many $500 bills: "
hundred5
label10: "this many $100 bills: "
hundred
label11: "this many $50 bills: "
fifty
label12: "this many $20 bills: "
twenty
label13: "this many $10 bills: "
ten
label14: "this many $5 bills: "
five
label15: "this many $2 bills: "
two
label16: "this many $1 bills: "
one

--DATA:
amountOwed-->>amount owed (integer)
cashPaid-->>amount tendered to pay for the amount owed (integer)
totalChangeDue-->>the difference between amountOwed and cashPaid (integer)
changeDue-->>change due for each value of bills (integer)
thousand100-->>number of $100000 bills (integer)
thousand10-->>number of $10000 bills (integer)
thousand5-->>number of $5000 bills (integer)
thousand-->>number of $1000 bills (integer)
hundred5-->>number of $500 bills (integer)
hundred-->>number of $100 bills (integer)
fifty-->>number of $50 bills (integer)
twenty-->>number of $20 bills (integer)
ten-->>number of $10 bills (integer)
five-->>number of $5 bills (integer)
two-->>number of $2 bills (integer)
one-->>number of $1 bills (integer)


3. Algorithm Instructions
10 output objective
20 output author
30 output user instructions
40 set amountOwed 
50 set cashPaid 
60 create a variable called changeDue
70 set changeDue = cashPaid - amountOwed
80 create a variable called totalChangeDue
90 set changeDue = totalChangedue

100 create thousand100, = changeDue / 100000
110 set changeDue = remainder from changeDue / 100000
120 create thousand10, = changeDue / 10000
130 set changeDue = remainder from changeDue / 10000
140 create thousand5, = changeDue / 5000
150 set changeDue = remainder from changeDue / 5000
160 create thousand, = changeDue / 1000
170 set changeDue = remainder from changeDue / 1000
180 create hundred5, = changeDue / 500
190 set changeDue = remainder from changeDue / 500
200 create hundred, = changeDue / 100
210 set changeDue = remainder from changeDue / 100
220 create fifty, = changeDue / 50
230 set changeDue = remainder from changeDue / 50
240 create twenty, = changeDue / 20
250 set changeDue = remainder from changeDue / 20
260 create ten, = changeDue / 10
270 set changeDue = remainder from changeDue / 10
280 create five, = changeDue / 5
290 set changeDue = remainder from changeDue / 5
300 set one, = changeDue 
310 set changeDue = remainder from changeDue  
320 output thousand100
310 output thousand10
320 output thousand5
330 output thousand
340 output hundred5
350 output hundred
360 output fifty
370 output twenty
380 output ten
390 output five
400 output one

4. Test cases 45000 Expected result changeDue=55000 from initial value amountOwed=45000
Test Case #1: 
10 objective
20 author
30 user instructions
40 amountOwed = 45000
50 cashPaid = 100000
60 changeDue = 
70 changeDue = 100000 - 45000 = 55000
80 totalChangeDue =
90 changeDue = 55000
100 int thousand100 = 55000 / 100000 = 0
110 changeDue = changeDue % 100000 = 55000
120 int thousand10 = changeDue / 10000 = 5
130 changeDue = 5000
140 int thousand5 = changeDue / 5000 = 1
150 changeDue = 0
160 int thousand = 0
170 changeDue = 0
180 int hundred5, = 0
190 changeDue = 0
200 create hundred, = 0
210 changeDue = 0
220 create fifty, = 0
230 changeDue = 0
240 create twenty, = 0
250 changeDue = 0
260 create ten, = 0
270 changeDue = 0
280 create five, = 0
290 changeDue = 0 
300 int one, = 0
310 changeDue = 0
320 output thousand100 = 0
310 output thousand10 = 5
320 output thousand5 = 1
330 output thousand = 0
340 output hundred5 = 0
350 output hundred = 0
360 output fifty = 0
370 output twenty = 0
380 output ten = 0
390 output five = 0
400 output one = 0

4. Test cases 44999 Expected result changeDue=55001 from initial value amountOwed=44999
Test Case #1: 
10 objective
20 author
30 user instructions
40 amountOwed = 44999
50 cashPaid = 100000
60 changeDue = 
70 changeDue = 100000 - 45000 = 55001
80 totalChangeDue =
90 changeDue = 55001
100 int thousand100 = 55001 / 100000 = 0
110 changeDue = changeDue % 100000 = 55001
120 int thousand10 = changeDue / 10000 = 5
130 changeDue = 5001
140 int thousand5 = changeDue / 5001 = 1
150 changeDue = 1
160 int thousand = 0
170 changeDue = 1
180 int hundred5, = 0
190 changeDue = 1
200 create hundred, = 0
210 changeDue = 1
220 create fifty, = 0
230 changeDue = 1
240 create twenty, = 0
250 changeDue = 1
260 create ten, = 0
270 changeDue = 1
280 create five, = 0
290 changeDue = 1
300 int one, = 1
310 changeDue = 0
320 output thousand100 = 0
310 output thousand10 = 5
320 output thousand5 = 1
330 output thousand = 0
340 output hundred5 = 0
350 output hundred = 0
360 output fifty = 0
370 output twenty = 0
380 output ten = 0
390 output five = 0
400 output one = 1